in_comp_res <-aggregate(cbind(Life.expectancy, Income.composition.of.resources) ~ Country, data = LifeExp, FUN = mean)
in_comp_res
ggscatter(in_comp_res, x = "Income.composition.of.resources", y = "Life.expectancy", add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson", xlab = "HDI (Income composition of resources)", ylab = "Life Expectancy")
cor.test(in_comp_res$Income.composition.of.resources,in_comp_res$Life.expectancy )
Italy_X <- LifeExp %>% filter (Country == "Italy")
Italy_Y <- select(Italy_X,Total.expenditure)
t.test(Italy_Y, mu = 8.41, alternative = "two.sided")
India_X <- LifeExp %>% filter (Country == "India")
India_Y <- select(India_X,Total.expenditure)
t.test(India_Y, mu = 5.2, alternative = "two.sided")
Mort_X <- aggregate(cbind(Life.expectancy, infant.deaths, under.five.deaths) ~ Country, data = LifeExp, FUN = mean)
Mort_X
mortx <- ceiling(mean(Mort_X$infant.deaths))
morty <- ceiling(mean(Mort_X$under.five.deaths))
argx <- c(mortx,morty)
argy <- c(1000,1000)
prop.test(argx,argy, correct = FALSE)
Alc_X <- aggregate(cbind(Life.expectancy, Alcohol) ~ Country, data = LifeExp, FUN = mean)
Alc_X
ggscatter(Alc_X, x = "Alcohol", y = "Life.expectancy", add = "reg.line", conf.int = TRUE, cor.coef = TRUE, cor.method = "pearson", xlab = "Alcohol consumption (in litres of pure alcohol", ylab = "Life Expectancy")
cor.test(Alc_X$Alcohol, Alc_X$Life.expectancy)
ggplot(LifeExp, aes(x=Alcohol, fill=Status)) +
geom_density(alpha=.5) +
labs(title  = "Alcohol consumption by Status", x ="Alcohol", y="Density") +
scale_fill_manual(values = c("#FFA600", "#A05195"))
ggplot(LifeExp, aes(x=log(GDP), fill=Status)) +
geom_density(alpha=.5) +
labs(title  = "GDP by Status", x ="GDP", y="Density") +
scale_fill_manual(values = c("#FFA600", "#A05195"))
life_expectancy_vs_GDP  <- ggplot(LifeExp, aes(GDP, Life.expectancy)) + geom_jitter(color = "lightblue", alpha = 0.5) + theme_light()
life_expectancy_vs_GDP
Immun_X <- aggregate(cbind(Life.expectancy, Polio, Diphtheria) ~ Country, data = LifeExp, FUN = mean)
Immun_X
xx_1 <- Immun_X %>% filter(Polio <= 85)
xx_2 <- Immun_X %>% filter(Polio > 85)
yy_1 <- Immun_X %>% filter(Diphtheria <= 85)
yy_2 <- Immun_X %>% filter(Diphtheria > 85)
zz1 <- data.frame(Life.expectancy = xx_1$Life.expectancy, Country = xx_1$Country)
zz1$Polio = 'Low'
zz2 <- data.frame(Life.expectancy = xx_2$Life.expectancy, Country = xx_2$Country)
zz2$Polio = 'High'
zz3 <- data.frame(Life.expectancy = yy_1$Life.expectancy, Country = yy_1$Country)
zz3$Diphtheria = 'Low'
zz4 <- data.frame(Life.expectancy = yy_2$Life.expectancy, Country = yy_2$Country)
zz4$Diphtheria = 'High'
Immun_Polio <- data.frame(rbind(zz1,zz2))
Immun_Polio
Immun_Diphtheria <- data.frame(rbind(zz3,zz4))
Immun_Diphtheria
Immun_Y <- merge(Immun_Polio, Immun_Diphtheria, by = "Country")
Immun_Y
Anova_Results_1 <- aov(Life.expectancy.x ~ Polio + Diphtheria, data = Immun_Y)
summary(Anova_Results_1)
life_expectancy_vs_Hepatitis_B <- ggplot(LifeExp, aes(Hepatitis.B, Life.expectancy)) + geom_jitter(color = "purple", alpha = 0.5) + theme_light()
life_expectancy_vs_Diphtheria  <- ggplot(LifeExp, aes(Diphtheria, Life.expectancy)) + geom_jitter(color = "orange", alpha = 0.5) + theme_light()
life_expectancy_vs_Polio  <- ggplot(LifeExp, aes(Polio, Life.expectancy)) + geom_jitter(color = "pink", alpha = 0.5) + theme_light()
life_expectancy_vs_Measles  <- ggplot(LifeExp, aes(Measles, Life.expectancy)) + geom_jitter(color = "light green", alpha = 0.5) + theme_light()
p <- plot_grid(life_expectancy_vs_Hepatitis_B, life_expectancy_vs_Diphtheria, life_expectancy_vs_Polio, life_expectancy_vs_Measles)
title <- ggdraw() + draw_label("Correlation between Immunizations and life expectancy", fontface='bold')
plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1))
life_expectancy_vs_percentage_expenditure <-  ggplot(LifeExp, aes(percentage.expenditure, Life.expectancy)) +
geom_jitter(color = "yellow", alpha = 0.5) + theme_light()
life_expectancy_vs_Total_expenditure  <- ggplot(LifeExp, aes(Total.expenditure, Life.expectancy)) +
geom_jitter(color = "purple", alpha = 0.5) + theme_light()
p <- plot_grid(life_expectancy_vs_percentage_expenditure, life_expectancy_vs_Total_expenditure)
title <- ggdraw() + draw_label("Correlation between Health expenditure and Life expectancy", fontface='bold')
plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1))
# Compute the correlation matrix
numeric_vars <- LifeExp[, sapply(LifeExp, is.numeric)]
cor_matrix <- cor(numeric_vars)
# Plot the correlation matrix using corrplot
corrplot::corrplot(cor_matrix, method = "color", type = "upper", tl.cex = 0.7)
# Adjust the text size
cor_matrix %>% corrr::network_plot(min_cor = .3)
LifeExp_scaled <- LifeExp %>% mutate(across(where(is.numeric), scale))
LifeExp_scaled_regression <- LifeExp_scaled %>% select(-Country, -Year)
train_percent <- 0.8
test_percent <- 1 - train_percent
num_rows <- nrow(LifeExp_scaled_regression)
train_size <- floor((train_percent) * nrow(LifeExp_scaled_regression))
set.seed(1)
train_indices <- sample.int(n = num_rows, size = train_size)
train <- LifeExp_scaled_regression[train_indices,]
test <- LifeExp_scaled_regression[-train_indices,]
cat("Train size: ", train_size, "\nTest size: ", num_rows - train_size)
Y_colname <- "Life.expectancy"
X_colnames <- colnames(LifeExp_scaled_regression)[colnames(LifeExp_scaled_regression) != Y_colname]
simple_lm <- lm(Life.expectancy ~ Income.composition.of.resources, data = train)
summary(simple_lm)
simple_lm_no_intercept <- lm(Life.expectancy ~ 0 + Income.composition.of.resources, data = train)
summary(simple_lm_no_intercept)
ggplot(train, aes(x = Income.composition.of.resources, y = Life.expectancy)) +
geom_point(color = "#80b1d3", size = 2, alpha = 0.9) +
labs(x = "Income composition of resources", y = "Life expectancy") +
theme_minimal() +
theme(axis.text = element_text(size = 8),
axis.title.x = element_text(size = 12),
axis.title.y = element_text(size = 12)) +
geom_abline(slope = coef(simple_lm)["Income.composition.of.resources"],
intercept = coef(simple_lm)["(Intercept)"],
color = "red", linetype = "solid", linewidth = 1.2)
par(mfrow = c(2, 2))
plot(simple_lm)
pred <- predict(simple_lm, newdata = test)
rmse <- sqrt(mean((test$Life.expectancy - pred)^2))
normalized_rmse_std <- sqrt(mean((pred - test$Life.expectancy)^2)) / sd(test$Life.expectancy)
normalized_rmse_range <- sqrt(mean((pred - test$Life.expectancy)^2)) / diff(range(test$Life.expectancy))
cat("RMSE =", rmse)
cat("\nNormalized RMSE (sd)    =", normalized_rmse_std)
cat("\nNormalized RMSE (range) =", normalized_rmse_range)
full_lm <- lm(train[,Y_colname] ~ ., data = train[, X_colnames])
summary(full_lm)
vif_values <- vif(full_lm)
sorted_vif <- sort(vif_values, decreasing = TRUE)
vif_table <- data.frame(VIF = sorted_vif)
vif_table
cols_to_remove <- c("under.five.deaths", "infant.deaths", "thinness.10.19.years", "thinness.5.9.years", "Income.composition.of.resources")
X_colnames_reduced <- X_colnames[!(X_colnames %in% cols_to_remove)]
full_lm_low_vif <- lm(train[,Y_colname] ~ ., data = train[, X_colnames_reduced])
summary(full_lm_low_vif)
par(mfrow=c(2,2))
plot(full_lm_low_vif)
nvmax <- 26 # 2 x number of variables
forward_sel_lm = regsubsets(train[,Y_colname] ~., data = train[, X_colnames_reduced], method = 'forward', nvmax = nvmax)
backward_sel_lm = regsubsets(train[,Y_colname] ~., data = train[, X_colnames_reduced], method = 'backward', nvmax = nvmax)
plot_max_point <- function(values){
max_idx = which.max(values)
points(max_idx, values[max_idx], col = 'red', cex = 2, pch = 20)
}
plot_min_point <- function(values){
min_idx = which.min(values)
points(min_idx, values[min_idx], col = 'red', cex = 2, pch = 20)
}
plot_subsets_summary <- function(featureSelection_lm){
featureSelection_lm_summary <- summary(featureSelection_lm)
xlabel = 'Number of iterations'
par(mfrow = c(3, 1))
adjr2_list <- featureSelection_lm_summary$adjr2
max_adjr2_idx <- which.max(adjr2_list)
plot(adjr2_list, xlab = xlabel, ylab = 'Adjusted R2', type = 'l')
plot_max_point(values = adjr2_list) # The model with highest value is the best model.
text(x = max_adjr2_idx, y = adjr2_list[max_adjr2_idx], labels = max_adjr2_idx, pos = 1)
cp_list <- featureSelection_lm_summary$cp
min_cp_idx <- which.min(cp_list)
plot(cp_list, xlab = xlabel, ylab = 'Cp', type = 'l')
plot_min_point(values = cp_list) # The model with least value is the best model.
text(x = min_cp_idx, y = cp_list[min_cp_idx], labels = min_cp_idx, pos = 3)
bic_list <- featureSelection_lm_summary$bic
min_bic_idx <- which.min(bic_list)
plot(bic_list, xlab = xlabel, ylab = 'BIC', type = 'l')
plot_min_point(values = bic_list) # The model with least value is the best model.
text(x = min_bic_idx, y = bic_list[min_bic_idx], labels = min_bic_idx, pos = 3)
}
#plot_subsets_summary(forward_sel_lm)
plot_subsets_summary(backward_sel_lm)
# Get the chosen variables according to each statistical measure
backward_sel_lm_summary <- summary(backward_sel_lm)
vars_adjr2 <- names(coefficients(backward_sel_lm, which.max(backward_sel_lm_summary$adjr2)))
vars_cp <- names(coefficients(backward_sel_lm, which.min(backward_sel_lm_summary$cp)))
vars_bic <- names(coefficients(backward_sel_lm, which.min(backward_sel_lm_summary$bic)))
# Get the variables in the full model
vars_full_model <- names(coef(full_lm_low_vif))
# Create a data frame to store the included variables
selected_vars_df <- data.frame(Feature = vars_full_model, AdjR2 = 0, Cp = 0, BIC = 0)
# Update the data frame with the variables included in each model
selected_vars_df$AdjR2 <- as.numeric(selected_vars_df$Feature %in% vars_adjr2)
selected_vars_df$Cp <- as.numeric(selected_vars_df$Feature %in% vars_cp)
selected_vars_df$BIC <- as.numeric(selected_vars_df$Feature %in% vars_bic)
# Remove the intercept from the data frame
selected_vars_df <- selected_vars_df[-1, ]
kable(selected_vars_df, row.names = FALSE)
plot(backward_sel_lm, scale = 'r2')
plot(backward_sel_lm, scale = 'bic')
plot(backward_sel_lm, scale = 'Cp')
cols_to_remove <- c("Population", "Total.expenditure")
X_colnames_reduced_featureSel <- X_colnames_reduced[!(X_colnames_reduced %in% cols_to_remove)]
featureSel_lm <- lm(train[,Y_colname] ~ ., data = train[, X_colnames_reduced_featureSel])
summary(featureSel_lm)
hist(featureSel_lm$residuals)
plot(featureSel_lm, which = 2)
shapiro.test(residuals(featureSel_lm))
X_colnames_reduced_featureSel_noStatus <- X_colnames_reduced_featureSel[!X_colnames_reduced_featureSel %in% "Status"]
train_log <- train[, c(X_colnames_reduced_featureSel_noStatus, "Life.expectancy")]
train_log <- log1p(train_log) # sqrt
train_log$Status <- train$Status
log_featureSel_lm <- lm(Life.expectancy ~ ., data = train_log)
summary(log_featureSel_lm)
hist(log_featureSel_lm$residuals)
shapiro.test(residuals(log_featureSel_lm))
prepare_ridge_lasso <- function(X, Y, alpha){
grid <- 10^seq(10, -2, length=100)
model <- glmnet(X, Y, alpha = alpha, standardize = F)
# alpha = 0 for Ridge Regression
# alpha = 1 for Lasso Regression
plot(model, label=TRUE)
set.seed(1)
cv.out <- cv.glmnet(X, Y, alpha = alpha, nfold=10, type.measure = "mse") # Add lambda = grid,
plot(cv.out)
i.bestlam <- which.min(cv.out$cvm)
bestlam <- cv.out$lambda[i.bestlam]
cat('Best lambda:', bestlam, '\n')
return(list('model' = model, 'lambda' = bestlam))
}
train$Status  <- as.numeric(train$Status) - 1
X = as.matrix(train[, X_colnames_reduced_featureSel])
Y = as.matrix(train[, Y_colname])
ridge_res = prepare_ridge_lasso(X = X,
Y = Y,
alpha = 0  # Ridge
)
ridge_model <- ridge_res$model
ridge_lambda <- ridge_res$lambda
test$Status  <- as.numeric(test$Status) - 1
ridge_pred <- predict(ridge_model,
s = ridge_lambda,
newx = as.matrix(test[, X_colnames_reduced_featureSel])
)
mean((ridge_pred - test$Life.expectancy)^2)
lasso_res = prepare_ridge_lasso(X = X,
Y = Y,
alpha = 1  # Lasso
)
lasso_model <- lasso_res$model
lasso_lambda <- lasso_res$lambda
lasso_pred <- predict(lasso_model,
s = lasso_lambda,
newx = as.matrix(test[, X_colnames_reduced_featureSel])
)
mean((lasso_pred - test$Life.expectancy)^2)
bptest(featureSel_lm)
ols_test_breusch_pagan(featureSel_lm)
ctable <- as.table(matrix(c(42, 6, 8, 28), nrow = 2, byrow = TRUE))
fourfoldplot(ctable, color = c("#CC6666", "#99CC99"),
conf.level = 0, margin = 1, main = "Confusion Matrix")
Developing_X <- aggregate(Life.expectancy ~ Country, data = LifeExp %>% filter (Status == "Developing"), FUN = mean)
Developed_Y <- aggregate(Life.expectancy ~ Country, data = LifeExp %>% filter (Status == "Developed"), FUN = mean)
head(Developing_X,5)
head(Developed_Y,5)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 1) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 1) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4 ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 1) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 1) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 0.5) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 1) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 1) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 0.5) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 1) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 0.8) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 1) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 0.8) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 0.8) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 0.8) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 0.6) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1.2) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 0.8) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 0.6) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1.2) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 0.8) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1.2) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 0.6) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 1) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 1) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
p1 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Life.expectancy), color = 5, lwd = 1.2) +
geom_density(data = LifeExp, aes(x = Life.expectancy), color = 2, lwd = 0.8) +
xlab("Life Expectancy Winsorization")
p2 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = infant.deaths), color = 5, lwd = 1.2) +
geom_density(data = LifeExp, aes(x = infant.deaths), color = 2, lwd = 0.6) +
xlab("Infant Deaths Winsorization")
p3 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = GDP), color = 5, lwd = 1.2) +
geom_density(data = LifeExp, aes(x = GDP), color = 2, lwd = 0.8) +
xlab("GDP Winsorization")
p4 <- ggplot() +
geom_density(data = LifeExp_old, aes(x = Population), color = 5, lwd = 1.2) +
geom_density(data = LifeExp, aes(x = Population), color = 2, lwd = 0.8) +
xlab("Population Winsorization")
grid.arrange(p1,p2,p3,p4, ncol = 2)
life_expectancy_vs_GDP  <- ggplot(LifeExp, aes(GDP, Life.expectancy)) + geom_jitter(fill=5, alpha=0.2)
life_expectancy_vs_GDP
life_expectancy_vs_GDP  <- ggplot(LifeExp, aes(GDP, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.5, fill=5)
life_expectancy_vs_GDP
life_expectancy_vs_GDP  <- ggplot(LifeExp, aes(GDP, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.5, fill=2)
life_expectancy_vs_GDP
life_expectancy_vs_GDP  <- ggplot(LifeExp, aes(GDP, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.2)
life_expectancy_vs_GDP
life_expectancy_vs_GDP  <- ggplot(LifeExp, aes(GDP, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
life_expectancy_vs_GDP
life_expectancy_vs_incomecomp <- ggplot(LifeExp, aes(Income.composition.of.resources, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
life_expectancy_vs_incomecomp
ggplot(LifeExp, aes(x=Life.expectancy, fill=Status)) +
geom_density(alpha=.5) +
labs(title  = "Life Expectancy by Status", x ="Life Expectancy", y="Density") +
scale_fill_manual(values = c(2, 5))
ggplot(LifeExp, aes(x = Status, fill = Status)) +
geom_bar() +
scale_fill_manual(values = c(5,2)) +
labs(title = "Status of Country", x = "Status", y = "Count") +
theme(axis.text = element_text(size = 8), axis.title = element_text(size = 8),
axis.text.y = element_text(size = 8), axis.title.y = element_text(size = 8))
ggplot(LifeExp, aes(x = Status, fill = Status)) +
geom_bar(alpha = 0.3) +
scale_fill_manual(values = c(5, 2)) +
labs(title = "Status of Country", x = "Status", y = "Count") +
theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 8),
axis.text.y = element_text(size = 8),
axis.title.y = element_text(size = 8))
ggplot(LifeExp, aes(x = Status, fill = Status)) +
geom_bar(alpha = 0.5) +
scale_fill_manual(values = c(5, 2)) +
labs(title = "Status of Country", x = "Status", y = "Count") +
theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 8),
axis.text.y = element_text(size = 8),
axis.title.y = element_text(size = 8))
ggplot(LifeExp, aes(x = Status, fill = Status)) +
geom_bar(alpha = 0.8) +
scale_fill_manual(values = c(5, 2)) +
labs(title = "Status of Country", x = "Status", y = "Count") +
theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 8),
axis.text.y = element_text(size = 8),
axis.title.y = element_text(size = 8))
ggplot(LifeExp, aes(x = Status, fill = Status)) +
geom_bar(alpha = 0.6) +
scale_fill_manual(values = c(5, 2)) +
labs(title = "Status of Country", x = "Status", y = "Count") +
theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 8),
axis.text.y = element_text(size = 8),
axis.title.y = element_text(size = 8))
ggplot(LifeExp, aes(x = Status, fill = Status)) +
geom_bar(alpha = 0.6) +
scale_fill_manual(values = c(2, 5)) +
labs(title = "Status of Country", x = "Status", y = "Count") +
theme(axis.text = element_text(size = 8),
axis.title = element_text(size = 8),
axis.text.y = element_text(size = 8),
axis.title.y = element_text(size = 8))
ggplot(LifeExp, aes(x=Alcohol, fill=Status)) +
geom_density(alpha=.5) +
labs(title  = "Alcohol consumption by Status", x ="Alcohol", y="Density") +
scale_fill_manual(values = c(2, 5))
ggplot(LifeExp, aes(x=log(GDP), fill=Status)) +
geom_density(alpha=.5) +
labs(title  = "GDP by Status", x ="GDP", y="Density") +
scale_fill_manual(values = c(2, 5))
life_expectancy_vs_Diphtheria  <- ggplot(LifeExp, aes(Diphtheria, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
life_expectancy_vs_Polio  <- ggplot(LifeExp, aes(Polio, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
p <- plot_grid(life_expectancy_vs_Diphtheria, life_expectancy_vs_Polio)
title <- ggdraw() + draw_label("Correlation between Immunizations and life expectancy", fontface='bold')
plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1))
life_expectancy_vs_Diphtheria  <- ggplot(LifeExp, aes(Diphtheria, Life.expectancy)) + geom_jitter(color = 5, alpha = 0.3)
life_expectancy_vs_Polio  <- ggplot(LifeExp, aes(Polio, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
p <- plot_grid(life_expectancy_vs_Diphtheria, life_expectancy_vs_Polio)
title <- ggdraw() + draw_label("Correlation between Immunizations and life expectancy", fontface='bold')
plot_grid(title, p, ncol=1, rel_heights=c(0.1, 1))
life_expectancy_vs_Diphtheria  <- ggplot(LifeExp, aes(Diphtheria, Life.expectancy)) + geom_jitter(color = 5, alpha = 0.3)
life_expectancy_vs_Polio  <- ggplot(LifeExp, aes(Polio, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
p <- plot_grid(life_expectancy_vs_Diphtheria, life_expectancy_vs_Polio)
title <- ggdraw() + draw_label("Correlation between Immunizations and life expectancy", fontface='bold')
plot_grid(title, p, nrow=1)
life_expectancy_vs_Diphtheria  <- ggplot(LifeExp, aes(Diphtheria, Life.expectancy)) + geom_jitter(color = 5, alpha = 0.3)
life_expectancy_vs_Polio  <- ggplot(LifeExp, aes(Polio, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
p <- plot_grid(life_expectancy_vs_Diphtheria, life_expectancy_vs_Polio)
title <- ggdraw() + draw_label("Correlation between Immunizations and life expectancy", fontface='bold')
plot_grid(title, p, ncol=1)
life_expectancy_vs_Diphtheria  <- ggplot(LifeExp, aes(Diphtheria, Life.expectancy)) + geom_jitter(color = 5, alpha = 0.3)
life_expectancy_vs_Polio  <- ggplot(LifeExp, aes(Polio, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
p <- plot_grid(life_expectancy_vs_Diphtheria, life_expectancy_vs_Polio)
plot_grid(p, ncol=1)
life_expectancy_vs_Diphtheria  <- ggplot(LifeExp, aes(Diphtheria, Life.expectancy)) + geom_jitter(color = 5, alpha = 0.3)
life_expectancy_vs_Polio  <- ggplot(LifeExp, aes(Polio, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
p <- plot_grid(life_expectancy_vs_Diphtheria, life_expectancy_vs_Polio)
title <- ggdraw() + draw_label("Correlation between Immunizations and life expectancy", fontface='bold')
plot_grid(p, ncol=1)
life_expectancy_vs_Diphtheria  <- ggplot(LifeExp, aes(Diphtheria, Life.expectancy)) + geom_jitter(color = 5, alpha = 0.3)
life_expectancy_vs_Polio  <- ggplot(LifeExp, aes(Polio, Life.expectancy)) + geom_jitter(color = 2, alpha = 0.3)
p <- plot_grid(life_expectancy_vs_Diphtheria, life_expectancy_vs_Polio)
title <- ggdraw() + draw_label("Correlation between Immunizations and life expectancy", fontface='bold')
plot_grid(title,p, ncol=1)
